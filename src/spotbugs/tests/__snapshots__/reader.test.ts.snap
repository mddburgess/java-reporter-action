// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SpotBugs report reader can read a SpotBugs report 1`] = `
Object {
  "bugs": Array [
    Object {
      "category": "CORRECTNESS",
      "endLine": 142,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Impossible downcast of toArray() result to Integer[] in org.example.cpd.ErrorProne.classCastExceptionWithToArray()",
      "priority": 1,
      "shortMessage": "Impossible downcast of toArray() result",
      "startLine": 142,
    },
    Object {
      "category": "STYLE",
      "endLine": 142,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Dead store to array in org.example.cpd.ErrorProne.classCastExceptionWithToArray()",
      "priority": 2,
      "shortMessage": "Dead store to local variable",
      "startLine": 142,
    },
    Object {
      "category": "CORRECTNESS",
      "endLine": 116,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "BigDecimal constructed from 1.123 in org.example.cpd.ErrorProne.avoidDecimalLiteralsInBigDecimalConstructor()",
      "priority": 2,
      "shortMessage": "BigDecimal constructed from double that isn't represented precisely",
      "startLine": 116,
    },
    Object {
      "category": "PERFORMANCE",
      "endLine": 37,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Primitive boxed just to call toString in org.example.cpd.ErrorProne.unnecessaryConversionTemporary(int)",
      "priority": 2,
      "shortMessage": "Method allocates a boxed primitive just to call toString",
      "startLine": 37,
    },
    Object {
      "category": "PERFORMANCE",
      "endLine": 37,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "org.example.cpd.ErrorProne.unnecessaryConversionTemporary(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
      "priority": 2,
      "shortMessage": "Method invokes inefficient Number constructor; use static valueOf instead",
      "startLine": 37,
    },
    Object {
      "category": "MT_CORRECTNESS",
      "endLine": 89,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Empty synchronized block in org.example.cpd.ErrorProne.emptySynchronizedBlock()",
      "priority": 2,
      "shortMessage": "Empty synchronized block",
      "startLine": 89,
    },
    Object {
      "category": "CORRECTNESS",
      "endLine": 100,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "There is an apparent infinite loop in org.example.cpd.ErrorProne.jumbledIncrementer()",
      "priority": 1,
      "shortMessage": "An apparent infinite loop",
      "startLine": 100,
    },
    Object {
      "category": "CORRECTNESS",
      "endLine": 128,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Null pointer dereference of string in org.example.cpd.ErrorProne.brokenNullCheck(String)",
      "priority": 1,
      "shortMessage": "Null pointer dereference",
      "startLine": 128,
    },
    Object {
      "category": "STYLE",
      "endLine": 128,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Load of known null value in org.example.cpd.ErrorProne.brokenNullCheck(String)",
      "priority": 2,
      "shortMessage": "Load of known null value",
      "startLine": 128,
    },
    Object {
      "category": "EXPERIMENTAL",
      "endLine": 137,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "org.example.cpd.ErrorProne.checkSkipResult() may fail to clean up java.io.InputStream",
      "priority": 2,
      "shortMessage": "Method may fail to clean up stream or resource",
      "startLine": 137,
    },
    Object {
      "category": "BAD_PRACTICE",
      "endLine": 135,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "org.example.cpd.ErrorProne.checkSkipResult() may fail to close stream",
      "priority": 2,
      "shortMessage": "Method may fail to close stream",
      "startLine": 135,
    },
    Object {
      "category": "STYLE",
      "endLine": 100,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Complicated, subtle or wrong increment in for-loop org.example.cpd.ErrorProne.jumbledIncrementer()",
      "priority": 2,
      "shortMessage": "Complicated, subtle or wrong increment in for-loop",
      "startLine": 100,
    },
    Object {
      "category": "CORRECTNESS",
      "endLine": 14,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Nullcheck of string at line 14 of value previously dereferenced in org.example.cpd.ErrorProne.misplacedNullCheck(String)",
      "priority": 2,
      "shortMessage": "Nullcheck of value previously dereferenced",
      "startLine": 14,
    },
    Object {
      "category": "CORRECTNESS",
      "endLine": 46,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Return value of java.math.BigDecimal.add(BigDecimal) ignored in org.example.cpd.ErrorProne.uselessOperationOnImmutable()",
      "priority": 1,
      "shortMessage": "Method ignores return value",
      "startLine": 46,
    },
    Object {
      "category": "BAD_PRACTICE",
      "endLine": 136,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "org.example.cpd.ErrorProne.checkSkipResult() ignores result of java.io.FileInputStream.skip(long)",
      "priority": 2,
      "shortMessage": "Method ignores results of InputStream.skip()",
      "startLine": 136,
    },
    Object {
      "category": "STYLE",
      "endLine": 140,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Useless object stored in variable collection of method org.example.cpd.ErrorProne.classCastExceptionWithToArray()",
      "priority": 2,
      "shortMessage": "Useless object created",
      "startLine": 140,
    },
    Object {
      "category": "STYLE",
      "endLine": 113,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Method org.example.cpd.ErrorProne.avoidBranchingStatementAsLastInLoop() seems to be useless",
      "priority": 2,
      "shortMessage": "Useless non-empty void method",
      "startLine": 113,
    },
    Object {
      "category": "STYLE",
      "endLine": 143,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Method org.example.cpd.ErrorProne.classCastExceptionWithToArray() seems to be useless",
      "priority": 2,
      "shortMessage": "Useless non-empty void method",
      "startLine": 143,
    },
    Object {
      "category": "STYLE",
      "endLine": 53,
      "filePath": "org/example/cpd/ErrorProne.java",
      "longMessage": "Method org.example.cpd.ErrorProne.dontUseFloatTypeForLoopIndices() seems to be useless",
      "priority": 2,
      "shortMessage": "Useless non-empty void method",
      "startLine": 53,
    },
    Object {
      "category": "CORRECTNESS",
      "endLine": 16,
      "filePath": "org/example/pmd/BestPractices.java",
      "longMessage": "Null pointer dereference of conn in org.example.pmd.BestPractices.checkResultSet()",
      "priority": 1,
      "shortMessage": "Null pointer dereference",
      "startLine": 16,
    },
    Object {
      "category": "EXPERIMENTAL",
      "endLine": 19,
      "filePath": "org/example/pmd/BestPractices.java",
      "longMessage": "org.example.pmd.BestPractices.checkResultSet() may fail to clean up java.sql.ResultSet",
      "priority": 2,
      "shortMessage": "Method may fail to clean up stream or resource",
      "startLine": 19,
    },
    Object {
      "category": "EXPERIMENTAL",
      "endLine": 19,
      "filePath": "org/example/pmd/BestPractices.java",
      "longMessage": "org.example.pmd.BestPractices.checkResultSet() may fail to clean up java.sql.Statement",
      "priority": 2,
      "shortMessage": "Method may fail to clean up stream or resource",
      "startLine": 19,
    },
    Object {
      "category": "BAD_PRACTICE",
      "endLine": 16,
      "filePath": "org/example/pmd/BestPractices.java",
      "longMessage": "org.example.pmd.BestPractices.checkResultSet() may fail to close Statement",
      "priority": 2,
      "shortMessage": "Method may fail to close database resource",
      "startLine": 16,
    },
    Object {
      "category": "STYLE",
      "endLine": 11,
      "filePath": "org/example/pmd/BestPractices.java",
      "longMessage": "Unread public/protected field: org.example.pmd.BestPractices.ipAddress",
      "priority": 2,
      "shortMessage": "Unread public/protected field",
      "startLine": 11,
    },
    Object {
      "category": "PERFORMANCE",
      "endLine": NaN,
      "filePath": "org/example/pmd/BestPractices.java",
      "longMessage": "Unused field: org.example.pmd.BestPractices.unusedPrivateField",
      "priority": 2,
      "shortMessage": "Unused field",
      "startLine": NaN,
    },
    Object {
      "category": "STYLE",
      "endLine": 41,
      "filePath": "org/example/pmd/CodeStyle.java",
      "longMessage": "Dead store to instance in org.example.pmd.CodeStyle.uselessQualifiedThis()",
      "priority": 2,
      "shortMessage": "Dead store to local variable",
      "startLine": 41,
    },
    Object {
      "category": "STYLE",
      "endLine": 8,
      "filePath": "org/example/pmd/Design.java",
      "longMessage": "Dead store to x in org.example.pmd.Design.collapsibleIfStatements(boolean, boolean)",
      "priority": 2,
      "shortMessage": "Dead store to local variable",
      "startLine": 8,
    },
    Object {
      "category": "CORRECTNESS",
      "endLine": 51,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Impossible downcast of toArray() result to Integer[] in org.example.pmd.ErrorProne.classCastExceptionWithToArray()",
      "priority": 1,
      "shortMessage": "Impossible downcast of toArray() result",
      "startLine": 51,
    },
    Object {
      "category": "STYLE",
      "endLine": 51,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Dead store to array in org.example.pmd.ErrorProne.classCastExceptionWithToArray()",
      "priority": 2,
      "shortMessage": "Dead store to local variable",
      "startLine": 51,
    },
    Object {
      "category": "CORRECTNESS",
      "endLine": 25,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "BigDecimal constructed from 1.123 in org.example.pmd.ErrorProne.avoidDecimalLiteralsInBigDecimalConstructor()",
      "priority": 2,
      "shortMessage": "BigDecimal constructed from double that isn't represented precisely",
      "startLine": 25,
    },
    Object {
      "category": "PERFORMANCE",
      "endLine": 135,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Primitive boxed just to call toString in org.example.pmd.ErrorProne.unnecessaryConversionTemporary(int)",
      "priority": 2,
      "shortMessage": "Method allocates a boxed primitive just to call toString",
      "startLine": 135,
    },
    Object {
      "category": "PERFORMANCE",
      "endLine": 135,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "org.example.pmd.ErrorProne.unnecessaryConversionTemporary(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
      "priority": 2,
      "shortMessage": "Method invokes inefficient Number constructor; use static valueOf instead",
      "startLine": 135,
    },
    Object {
      "category": "MT_CORRECTNESS",
      "endLine": 94,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Empty synchronized block in org.example.pmd.ErrorProne.emptySynchronizedBlock()",
      "priority": 2,
      "shortMessage": "Empty synchronized block",
      "startLine": 94,
    },
    Object {
      "category": "CORRECTNESS",
      "endLine": 105,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "There is an apparent infinite loop in org.example.pmd.ErrorProne.jumbledIncrementer()",
      "priority": 1,
      "shortMessage": "An apparent infinite loop",
      "startLine": 105,
    },
    Object {
      "category": "CORRECTNESS",
      "endLine": 37,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Null pointer dereference of string in org.example.pmd.ErrorProne.brokenNullCheck(String)",
      "priority": 1,
      "shortMessage": "Null pointer dereference",
      "startLine": 37,
    },
    Object {
      "category": "STYLE",
      "endLine": 37,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Load of known null value in org.example.pmd.ErrorProne.brokenNullCheck(String)",
      "priority": 2,
      "shortMessage": "Load of known null value",
      "startLine": 37,
    },
    Object {
      "category": "EXPERIMENTAL",
      "endLine": 46,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "org.example.pmd.ErrorProne.checkSkipResult() may fail to clean up java.io.InputStream",
      "priority": 2,
      "shortMessage": "Method may fail to clean up stream or resource",
      "startLine": 46,
    },
    Object {
      "category": "BAD_PRACTICE",
      "endLine": 44,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "org.example.pmd.ErrorProne.checkSkipResult() may fail to close stream",
      "priority": 2,
      "shortMessage": "Method may fail to close stream",
      "startLine": 44,
    },
    Object {
      "category": "STYLE",
      "endLine": 105,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Complicated, subtle or wrong increment in for-loop org.example.pmd.ErrorProne.jumbledIncrementer()",
      "priority": 2,
      "shortMessage": "Complicated, subtle or wrong increment in for-loop",
      "startLine": 105,
    },
    Object {
      "category": "CORRECTNESS",
      "endLine": 112,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Nullcheck of string at line 112 of value previously dereferenced in org.example.pmd.ErrorProne.misplacedNullCheck(String)",
      "priority": 2,
      "shortMessage": "Nullcheck of value previously dereferenced",
      "startLine": 112,
    },
    Object {
      "category": "CORRECTNESS",
      "endLine": 144,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Return value of java.math.BigDecimal.add(BigDecimal) ignored in org.example.pmd.ErrorProne.uselessOperationOnImmutable()",
      "priority": 1,
      "shortMessage": "Method ignores return value",
      "startLine": 144,
    },
    Object {
      "category": "BAD_PRACTICE",
      "endLine": 45,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "org.example.pmd.ErrorProne.checkSkipResult() ignores result of java.io.FileInputStream.skip(long)",
      "priority": 2,
      "shortMessage": "Method ignores results of InputStream.skip()",
      "startLine": 45,
    },
    Object {
      "category": "STYLE",
      "endLine": 49,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Useless object stored in variable collection of method org.example.pmd.ErrorProne.classCastExceptionWithToArray()",
      "priority": 2,
      "shortMessage": "Useless object created",
      "startLine": 49,
    },
    Object {
      "category": "STYLE",
      "endLine": 22,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Method org.example.pmd.ErrorProne.avoidBranchingStatementAsLastInLoop() seems to be useless",
      "priority": 2,
      "shortMessage": "Useless non-empty void method",
      "startLine": 22,
    },
    Object {
      "category": "STYLE",
      "endLine": 52,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Method org.example.pmd.ErrorProne.classCastExceptionWithToArray() seems to be useless",
      "priority": 2,
      "shortMessage": "Useless non-empty void method",
      "startLine": 52,
    },
    Object {
      "category": "STYLE",
      "endLine": 58,
      "filePath": "org/example/pmd/ErrorProne.java",
      "longMessage": "Method org.example.pmd.ErrorProne.dontUseFloatTypeForLoopIndices() seems to be useless",
      "priority": 2,
      "shortMessage": "Useless non-empty void method",
      "startLine": 58,
    },
    Object {
      "category": "MT_CORRECTNESS",
      "endLine": 18,
      "filePath": "org/example/pmd/Multithreading.java",
      "longMessage": "Possible doublecheck on org.example.pmd.Multithreading.object in org.example.pmd.Multithreading.doubleCheckedLocking()",
      "priority": 2,
      "shortMessage": "Possible double check of field",
      "startLine": 16,
    },
    Object {
      "category": "STYLE",
      "endLine": 8,
      "filePath": "org/example/pmd/Multithreading.java",
      "longMessage": "Dead store to tg in org.example.pmd.Multithreading.avoidThreadGroup()",
      "priority": 1,
      "shortMessage": "Dead store to local variable",
      "startLine": 8,
    },
    Object {
      "category": "MT_CORRECTNESS",
      "endLine": 19,
      "filePath": "org/example/pmd/Multithreading.java",
      "longMessage": "Inconsistent synchronization of org.example.pmd.Multithreading.object; locked 40% of time",
      "priority": 2,
      "shortMessage": "Inconsistent synchronization",
      "startLine": 19,
    },
    Object {
      "category": "MT_CORRECTNESS",
      "endLine": 12,
      "filePath": "org/example/pmd/Multithreading.java",
      "longMessage": "org.example.pmd.Multithreading.dontCallThreadRun() explicitly invokes run on a thread (did you mean to start it instead?)",
      "priority": 2,
      "shortMessage": "Invokes run on a thread (did you mean to start it instead?)",
      "startLine": 12,
    },
    Object {
      "category": "PERFORMANCE",
      "endLine": 12,
      "filePath": "org/example/pmd/Performance.java",
      "longMessage": "org.example.pmd.Performance.booleanInstantiation() invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead",
      "priority": 2,
      "shortMessage": "Method invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead",
      "startLine": 12,
    },
  ],
  "categories": Map {
    "BAD_PRACTICE" => "Bad practice",
    "CORRECTNESS" => "Correctness",
    "PERFORMANCE" => "Performance",
    "STYLE" => "Dodgy code",
    "EXPERIMENTAL" => "Experimental",
    "MT_CORRECTNESS" => "Multithreaded correctness",
  },
}
`;
