// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SpotBugs annotator can annotate a SpotBugs report 1`] = `
Array [
  Object {
    "annotation_level": "failure",
    "end_line": 142,
    "message": "Impossible downcast of toArray() result to Integer[] in org.example.cpd.ErrorProne.classCastExceptionWithToArray()",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 142,
    "title": "Correctness: Impossible downcast of toArray() result",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 142,
    "message": "Dead store to array in org.example.cpd.ErrorProne.classCastExceptionWithToArray()",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 142,
    "title": "Dodgy code: Dead store to local variable",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 116,
    "message": "BigDecimal constructed from 1.123 in org.example.cpd.ErrorProne.avoidDecimalLiteralsInBigDecimalConstructor()",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 116,
    "title": "Correctness: BigDecimal constructed from double that isn't represented precisely",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 37,
    "message": "Primitive boxed just to call toString in org.example.cpd.ErrorProne.unnecessaryConversionTemporary(int)",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 37,
    "title": "Performance: Method allocates a boxed primitive just to call toString",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 37,
    "message": "org.example.cpd.ErrorProne.unnecessaryConversionTemporary(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 37,
    "title": "Performance: Method invokes inefficient Number constructor; use static valueOf instead",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 89,
    "message": "Empty synchronized block in org.example.cpd.ErrorProne.emptySynchronizedBlock()",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 89,
    "title": "Multithreaded correctness: Empty synchronized block",
  },
  Object {
    "annotation_level": "failure",
    "end_line": 100,
    "message": "There is an apparent infinite loop in org.example.cpd.ErrorProne.jumbledIncrementer()",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 100,
    "title": "Correctness: An apparent infinite loop",
  },
  Object {
    "annotation_level": "failure",
    "end_line": 128,
    "message": "Null pointer dereference of string in org.example.cpd.ErrorProne.brokenNullCheck(String)",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 128,
    "title": "Correctness: Null pointer dereference",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 128,
    "message": "Load of known null value in org.example.cpd.ErrorProne.brokenNullCheck(String)",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 128,
    "title": "Dodgy code: Load of known null value",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 137,
    "message": "org.example.cpd.ErrorProne.checkSkipResult() may fail to clean up java.io.InputStream",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 137,
    "title": "Experimental: Method may fail to clean up stream or resource",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 135,
    "message": "org.example.cpd.ErrorProne.checkSkipResult() may fail to close stream",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 135,
    "title": "Bad practice: Method may fail to close stream",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 100,
    "message": "Complicated, subtle or wrong increment in for-loop org.example.cpd.ErrorProne.jumbledIncrementer()",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 100,
    "title": "Dodgy code: Complicated, subtle or wrong increment in for-loop",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 14,
    "message": "Nullcheck of string at line 14 of value previously dereferenced in org.example.cpd.ErrorProne.misplacedNullCheck(String)",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 14,
    "title": "Correctness: Nullcheck of value previously dereferenced",
  },
  Object {
    "annotation_level": "failure",
    "end_line": 46,
    "message": "Return value of java.math.BigDecimal.add(BigDecimal) ignored in org.example.cpd.ErrorProne.uselessOperationOnImmutable()",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 46,
    "title": "Correctness: Method ignores return value",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 136,
    "message": "org.example.cpd.ErrorProne.checkSkipResult() ignores result of java.io.FileInputStream.skip(long)",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 136,
    "title": "Bad practice: Method ignores results of InputStream.skip()",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 140,
    "message": "Useless object stored in variable collection of method org.example.cpd.ErrorProne.classCastExceptionWithToArray()",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 140,
    "title": "Dodgy code: Useless object created",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 113,
    "message": "Method org.example.cpd.ErrorProne.avoidBranchingStatementAsLastInLoop() seems to be useless",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 113,
    "title": "Dodgy code: Useless non-empty void method",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 143,
    "message": "Method org.example.cpd.ErrorProne.classCastExceptionWithToArray() seems to be useless",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 143,
    "title": "Dodgy code: Useless non-empty void method",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 53,
    "message": "Method org.example.cpd.ErrorProne.dontUseFloatTypeForLoopIndices() seems to be useless",
    "path": "example/src/main/java/org/example/cpd/ErrorProne.java",
    "start_line": 53,
    "title": "Dodgy code: Useless non-empty void method",
  },
  Object {
    "annotation_level": "failure",
    "end_line": 16,
    "message": "Null pointer dereference of conn in org.example.pmd.BestPractices.checkResultSet()",
    "path": "example/src/main/java/org/example/pmd/BestPractices.java",
    "start_line": 16,
    "title": "Correctness: Null pointer dereference",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 19,
    "message": "org.example.pmd.BestPractices.checkResultSet() may fail to clean up java.sql.ResultSet",
    "path": "example/src/main/java/org/example/pmd/BestPractices.java",
    "start_line": 19,
    "title": "Experimental: Method may fail to clean up stream or resource",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 19,
    "message": "org.example.pmd.BestPractices.checkResultSet() may fail to clean up java.sql.Statement",
    "path": "example/src/main/java/org/example/pmd/BestPractices.java",
    "start_line": 19,
    "title": "Experimental: Method may fail to clean up stream or resource",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 16,
    "message": "org.example.pmd.BestPractices.checkResultSet() may fail to close Statement",
    "path": "example/src/main/java/org/example/pmd/BestPractices.java",
    "start_line": 16,
    "title": "Bad practice: Method may fail to close database resource",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 11,
    "message": "Unread public/protected field: org.example.pmd.BestPractices.ipAddress",
    "path": "example/src/main/java/org/example/pmd/BestPractices.java",
    "start_line": 11,
    "title": "Dodgy code: Unread public/protected field",
  },
  Object {
    "annotation_level": "warning",
    "end_line": NaN,
    "message": "Unused field: org.example.pmd.BestPractices.unusedPrivateField",
    "path": "example/src/main/java/org/example/pmd/BestPractices.java",
    "start_line": NaN,
    "title": "Performance: Unused field",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 41,
    "message": "Dead store to instance in org.example.pmd.CodeStyle.uselessQualifiedThis()",
    "path": "example/src/main/java/org/example/pmd/CodeStyle.java",
    "start_line": 41,
    "title": "Dodgy code: Dead store to local variable",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 8,
    "message": "Dead store to x in org.example.pmd.Design.collapsibleIfStatements(boolean, boolean)",
    "path": "example/src/main/java/org/example/pmd/Design.java",
    "start_line": 8,
    "title": "Dodgy code: Dead store to local variable",
  },
  Object {
    "annotation_level": "failure",
    "end_line": 51,
    "message": "Impossible downcast of toArray() result to Integer[] in org.example.pmd.ErrorProne.classCastExceptionWithToArray()",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 51,
    "title": "Correctness: Impossible downcast of toArray() result",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 51,
    "message": "Dead store to array in org.example.pmd.ErrorProne.classCastExceptionWithToArray()",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 51,
    "title": "Dodgy code: Dead store to local variable",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 25,
    "message": "BigDecimal constructed from 1.123 in org.example.pmd.ErrorProne.avoidDecimalLiteralsInBigDecimalConstructor()",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 25,
    "title": "Correctness: BigDecimal constructed from double that isn't represented precisely",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 135,
    "message": "Primitive boxed just to call toString in org.example.pmd.ErrorProne.unnecessaryConversionTemporary(int)",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 135,
    "title": "Performance: Method allocates a boxed primitive just to call toString",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 135,
    "message": "org.example.pmd.ErrorProne.unnecessaryConversionTemporary(int) invokes inefficient new Integer(int) constructor; use Integer.valueOf(int) instead",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 135,
    "title": "Performance: Method invokes inefficient Number constructor; use static valueOf instead",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 94,
    "message": "Empty synchronized block in org.example.pmd.ErrorProne.emptySynchronizedBlock()",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 94,
    "title": "Multithreaded correctness: Empty synchronized block",
  },
  Object {
    "annotation_level": "failure",
    "end_line": 105,
    "message": "There is an apparent infinite loop in org.example.pmd.ErrorProne.jumbledIncrementer()",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 105,
    "title": "Correctness: An apparent infinite loop",
  },
  Object {
    "annotation_level": "failure",
    "end_line": 37,
    "message": "Null pointer dereference of string in org.example.pmd.ErrorProne.brokenNullCheck(String)",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 37,
    "title": "Correctness: Null pointer dereference",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 37,
    "message": "Load of known null value in org.example.pmd.ErrorProne.brokenNullCheck(String)",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 37,
    "title": "Dodgy code: Load of known null value",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 46,
    "message": "org.example.pmd.ErrorProne.checkSkipResult() may fail to clean up java.io.InputStream",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 46,
    "title": "Experimental: Method may fail to clean up stream or resource",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 44,
    "message": "org.example.pmd.ErrorProne.checkSkipResult() may fail to close stream",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 44,
    "title": "Bad practice: Method may fail to close stream",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 105,
    "message": "Complicated, subtle or wrong increment in for-loop org.example.pmd.ErrorProne.jumbledIncrementer()",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 105,
    "title": "Dodgy code: Complicated, subtle or wrong increment in for-loop",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 112,
    "message": "Nullcheck of string at line 112 of value previously dereferenced in org.example.pmd.ErrorProne.misplacedNullCheck(String)",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 112,
    "title": "Correctness: Nullcheck of value previously dereferenced",
  },
  Object {
    "annotation_level": "failure",
    "end_line": 144,
    "message": "Return value of java.math.BigDecimal.add(BigDecimal) ignored in org.example.pmd.ErrorProne.uselessOperationOnImmutable()",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 144,
    "title": "Correctness: Method ignores return value",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 45,
    "message": "org.example.pmd.ErrorProne.checkSkipResult() ignores result of java.io.FileInputStream.skip(long)",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 45,
    "title": "Bad practice: Method ignores results of InputStream.skip()",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 49,
    "message": "Useless object stored in variable collection of method org.example.pmd.ErrorProne.classCastExceptionWithToArray()",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 49,
    "title": "Dodgy code: Useless object created",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 22,
    "message": "Method org.example.pmd.ErrorProne.avoidBranchingStatementAsLastInLoop() seems to be useless",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 22,
    "title": "Dodgy code: Useless non-empty void method",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 52,
    "message": "Method org.example.pmd.ErrorProne.classCastExceptionWithToArray() seems to be useless",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 52,
    "title": "Dodgy code: Useless non-empty void method",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 58,
    "message": "Method org.example.pmd.ErrorProne.dontUseFloatTypeForLoopIndices() seems to be useless",
    "path": "example/src/main/java/org/example/pmd/ErrorProne.java",
    "start_line": 58,
    "title": "Dodgy code: Useless non-empty void method",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 18,
    "message": "Possible doublecheck on org.example.pmd.Multithreading.object in org.example.pmd.Multithreading.doubleCheckedLocking()",
    "path": "example/src/main/java/org/example/pmd/Multithreading.java",
    "start_line": 16,
    "title": "Multithreaded correctness: Possible double check of field",
  },
  Object {
    "annotation_level": "failure",
    "end_line": 8,
    "message": "Dead store to tg in org.example.pmd.Multithreading.avoidThreadGroup()",
    "path": "example/src/main/java/org/example/pmd/Multithreading.java",
    "start_line": 8,
    "title": "Dodgy code: Dead store to local variable",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 19,
    "message": "Inconsistent synchronization of org.example.pmd.Multithreading.object; locked 40% of time",
    "path": "example/src/main/java/org/example/pmd/Multithreading.java",
    "start_line": 19,
    "title": "Multithreaded correctness: Inconsistent synchronization",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 12,
    "message": "org.example.pmd.Multithreading.dontCallThreadRun() explicitly invokes run on a thread (did you mean to start it instead?)",
    "path": "example/src/main/java/org/example/pmd/Multithreading.java",
    "start_line": 12,
    "title": "Multithreaded correctness: Invokes run on a thread (did you mean to start it instead?)",
  },
  Object {
    "annotation_level": "warning",
    "end_line": 12,
    "message": "org.example.pmd.Performance.booleanInstantiation() invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead",
    "path": "example/src/main/java/org/example/pmd/Performance.java",
    "start_line": 12,
    "title": "Performance: Method invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead",
  },
]
`;
