// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkstyle annotator can annotate a Checkstyle report 1`] = `
Object {
  "annotation_level": "failure",
  "end_column": 0,
  "end_line": 1,
  "message": "Missing package-info.java file.",
  "path": Any<String>,
  "start_column": 0,
  "start_line": 1,
  "title": "JavadocPackageCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 2`] = `
Object {
  "annotation_level": "failure",
  "end_column": 12,
  "end_line": 11,
  "message": "'{' is not followed by whitespace.",
  "path": Any<String>,
  "start_column": 12,
  "start_line": 11,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 3`] = `
Object {
  "annotation_level": "failure",
  "end_column": 12,
  "end_line": 11,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 12,
  "start_line": 11,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 4`] = `
Object {
  "annotation_level": "failure",
  "end_column": 13,
  "end_line": 11,
  "message": "'}' is not preceded with whitespace.",
  "path": Any<String>,
  "start_column": 13,
  "start_line": 11,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 5`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 13,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'misplacedNullCheck' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'misplacedNullCheck' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 13,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 6`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 13,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 13,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 7`] = `
Object {
  "annotation_level": "failure",
  "end_column": 39,
  "end_line": 13,
  "message": "Parameter string should be final.",
  "path": Any<String>,
  "start_column": 39,
  "start_line": 13,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 8`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 17,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'equals' 
does not have javadoc that explains how to do that safely. If class is not designed for extension 
consider making the class 'ErrorProne' final or making the method 'equals' 
static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 17,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 9`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 17,
  "message": "Definition of 'equals()' without corresponding definition of 'hashCode()'.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 17,
  "title": "EqualsHashCodeCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 10`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 17,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 17,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 11`] = `
Object {
  "annotation_level": "failure",
  "end_column": 27,
  "end_line": 17,
  "message": "Parameter other should be final.",
  "path": Any<String>,
  "start_column": 27,
  "start_line": 17,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 12`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 21,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'returnFromFinallyBlock' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'returnFromFinallyBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 21,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 13`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 21,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 21,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 14`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 29,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'unconditionalIfStatement' does not have javadoc that explains how to do that safely. If class is 
not designed for extension consider making the class 'ErrorProne' final or making the method 
'unconditionalIfStatement' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 29,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 15`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 29,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 29,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 16`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 36,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'unnecessaryConversionTemporary' does not have javadoc that explains how to do that safely. If class 
is not designed for extension consider making the class 'ErrorProne' final or making the method 
'unnecessaryConversionTemporary' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 36,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 17`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 36,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 36,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 18`] = `
Object {
  "annotation_level": "failure",
  "end_column": 50,
  "end_line": 36,
  "message": "Parameter x should be final.",
  "path": Any<String>,
  "start_column": 50,
  "start_line": 36,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 19`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 40,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'unusedNullCheckInEquals' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'unusedNullCheckInEquals' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 40,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 20`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 40,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 40,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 21`] = `
Object {
  "annotation_level": "failure",
  "end_column": 44,
  "end_line": 40,
  "message": "Parameter a should be final.",
  "path": Any<String>,
  "start_column": 44,
  "start_line": 40,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 22`] = `
Object {
  "annotation_level": "failure",
  "end_column": 54,
  "end_line": 40,
  "message": "Parameter b should be final.",
  "path": Any<String>,
  "start_column": 54,
  "start_line": 40,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 23`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 44,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'uselessOperationOnImmutable' does not have javadoc that explains how to do that safely. If class is 
not designed for extension consider making the class 'ErrorProne' final or making the method 
'uselessOperationOnImmutable' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 44,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 24`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 44,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 44,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 25`] = `
Object {
  "annotation_level": "failure",
  "end_column": 40,
  "end_line": 45,
  "message": "'5' is a magic number.",
  "path": Any<String>,
  "start_column": 40,
  "start_line": 45,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 26`] = `
Object {
  "annotation_level": "failure",
  "end_column": 31,
  "end_line": 46,
  "message": "'6' is a magic number.",
  "path": Any<String>,
  "start_column": 31,
  "start_line": 46,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 27`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 49,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'dontUseFloatTypeForLoopIndices' does not have javadoc that explains how to do that safely. If class 
is not designed for extension consider making the class 'ErrorProne' final or making the method 
'dontUseFloatTypeForLoopIndices' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 49,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 28`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 49,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 49,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 29`] = `
Object {
  "annotation_level": "failure",
  "end_column": 31,
  "end_line": 50,
  "message": "'10' is a magic number.",
  "path": Any<String>,
  "start_column": 31,
  "start_line": 50,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 30`] = `
Object {
  "annotation_level": "failure",
  "end_column": 40,
  "end_line": 50,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 40,
  "start_line": 50,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 31`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 55,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptyTryCatchFinallyBlocks' does not have javadoc that explains how to do that safely. If class is 
not designed for extension consider making the class 'ErrorProne' final or making the method 
'emptyTryCatchFinallyBlocks' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 55,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 32`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 55,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 55,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 33`] = `
Object {
  "annotation_level": "failure",
  "end_column": 13,
  "end_line": 56,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 13,
  "start_line": 56,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 34`] = `
Object {
  "annotation_level": "failure",
  "end_column": 19,
  "end_line": 60,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 19,
  "start_line": 60,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 35`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 65,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptyIfBlock' does not have javadoc that explains how to do that safely. If class is not designed 
for extension consider making the class 'ErrorProne' final or making the method 'emptyIfBlock' 
static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 65,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 36`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 65,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 65,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 37`] = `
Object {
  "annotation_level": "failure",
  "end_column": 30,
  "end_line": 65,
  "message": "Parameter condition should be final.",
  "path": Any<String>,
  "start_column": 30,
  "start_line": 65,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 38`] = `
Object {
  "annotation_level": "failure",
  "end_column": 24,
  "end_line": 66,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 24,
  "start_line": 66,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 39`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 71,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptyStatementBlock' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'emptyStatementBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 71,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 40`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 71,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 71,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 41`] = `
Object {
  "annotation_level": "failure",
  "end_column": 9,
  "end_line": 72,
  "message": "'{' is not followed by whitespace.",
  "path": Any<String>,
  "start_column": 9,
  "start_line": 72,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 42`] = `
Object {
  "annotation_level": "failure",
  "end_column": 9,
  "end_line": 72,
  "message": "Avoid nested blocks.",
  "path": Any<String>,
  "start_column": 9,
  "start_line": 72,
  "title": "AvoidNestedBlocksCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 43`] = `
Object {
  "annotation_level": "failure",
  "end_column": 10,
  "end_line": 72,
  "message": "'}' is not preceded with whitespace.",
  "path": Any<String>,
  "start_column": 10,
  "start_line": 72,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 44`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 75,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptyStatementNotInLoop' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'emptyStatementNotInLoop' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 75,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 45`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 75,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 75,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 46`] = `
Object {
  "annotation_level": "failure",
  "end_column": 9,
  "end_line": 76,
  "message": "Empty statement.",
  "path": Any<String>,
  "start_column": 9,
  "start_line": 76,
  "title": "EmptyStatementCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 47`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 79,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptySwitchStatements' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'emptySwitchStatements' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 79,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 48`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 79,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 79,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 49`] = `
Object {
  "annotation_level": "failure",
  "end_column": 0,
  "end_line": 81,
  "message": "switch without \\"default\\" clause.",
  "path": Any<String>,
  "start_column": 0,
  "start_line": 81,
  "title": "MissingSwitchDefaultCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 50`] = `
Object {
  "annotation_level": "failure",
  "end_column": 20,
  "end_line": 81,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 20,
  "start_line": 81,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 51`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 86,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptySynchronizedBlock' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'emptySynchronizedBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 86,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 52`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 86,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 86,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 53`] = `
Object {
  "annotation_level": "failure",
  "end_column": 29,
  "end_line": 87,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 29,
  "start_line": 87,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 54`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 92,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptyWhileStmt' does not have javadoc that explains how to do that safely. If class is not designed 
for extension consider making the class 'ErrorProne' final or making the method 'emptyWhileStmt' 
static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 92,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 55`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 92,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 92,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 56`] = `
Object {
  "annotation_level": "failure",
  "end_column": 22,
  "end_line": 93,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 22,
  "start_line": 93,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 57`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 98,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'jumbledIncrementer' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'jumbledIncrementer' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 98,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 58`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 98,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 98,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 59`] = `
Object {
  "annotation_level": "failure",
  "end_column": 29,
  "end_line": 99,
  "message": "'10' is a magic number.",
  "path": Any<String>,
  "start_column": 29,
  "start_line": 99,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 60`] = `
Object {
  "annotation_level": "failure",
  "end_column": 33,
  "end_line": 100,
  "message": "'20' is a magic number.",
  "path": Any<String>,
  "start_column": 33,
  "start_line": 100,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 61`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 106,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'avoidBranchingStatementAsLastInLoop' does not have javadoc that explains how to do that safely. If 
class is not designed for extension consider making the class 'ErrorProne' final or making the 
method 'avoidBranchingStatementAsLastInLoop' static/final/abstract/empty, or adding allowed 
annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 106,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 62`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 106,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 106,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 63`] = `
Object {
  "annotation_level": "failure",
  "end_column": 29,
  "end_line": 107,
  "message": "'10' is a magic number.",
  "path": Any<String>,
  "start_column": 29,
  "start_line": 107,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 64`] = `
Object {
  "annotation_level": "failure",
  "end_column": 26,
  "end_line": 108,
  "message": "'25' is a magic number.",
  "path": Any<String>,
  "start_column": 26,
  "start_line": 108,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 65`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 115,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'avoidDecimalLiteralsInBigDecimalConstructor' does not have javadoc that explains how to do that 
safely. If class is not designed for extension consider making the class 'ErrorProne' final or 
making the method 'avoidDecimalLiteralsInBigDecimalConstructor' static/final/abstract/empty, or 
adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 115,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 66`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 115,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 115,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 67`] = `
Object {
  "annotation_level": "failure",
  "end_column": 31,
  "end_line": 116,
  "message": "'1.123' is a magic number.",
  "path": Any<String>,
  "start_column": 31,
  "start_line": 116,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 68`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 119,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'avoidMultipleUnaryOperators' does not have javadoc that explains how to do that safely. If class is 
not designed for extension consider making the class 'ErrorProne' final or making the method 
'avoidMultipleUnaryOperators' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 119,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 69`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 119,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 119,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 70`] = `
Object {
  "annotation_level": "failure",
  "end_column": 17,
  "end_line": 120,
  "message": "Expression can be simplified.",
  "path": Any<String>,
  "start_column": 17,
  "start_line": 120,
  "title": "SimplifyBooleanExpressionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 71`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 123,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'avoidUsingOctalValues' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'avoidUsingOctalValues' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 123,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 72`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 123,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 123,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 73`] = `
Object {
  "annotation_level": "failure",
  "end_column": 16,
  "end_line": 124,
  "message": "'010' is a magic number.",
  "path": Any<String>,
  "start_column": 16,
  "start_line": 124,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 74`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 127,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'brokenNullCheck' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'brokenNullCheck' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 127,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 75`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 127,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 127,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 76`] = `
Object {
  "annotation_level": "failure",
  "end_column": 35,
  "end_line": 127,
  "message": "Parameter string should be final.",
  "path": Any<String>,
  "start_column": 35,
  "start_line": 127,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 77`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 134,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'checkSkipResult' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'checkSkipResult' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 134,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 78`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 134,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 134,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 79`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 139,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'classCastExceptionWithToArray' does not have javadoc that explains how to do that safely. If class 
is not designed for extension consider making the class 'ErrorProne' final or making the method 
'classCastExceptionWithToArray' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 139,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 80`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 139,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 139,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 81`] = `
Object {
  "annotation_level": "failure",
  "end_column": 0,
  "end_line": 1,
  "message": "Missing package-info.java file.",
  "path": Any<String>,
  "start_column": 0,
  "start_line": 1,
  "title": "JavadocPackageCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 82`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 5,
  "message": "Class 'Design' looks like designed for extension (can be subclassed), but the method 
'collapsibleIfStatements' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'Design' final or making the method 
'collapsibleIfStatements' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 5,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 83`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 5,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 5,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 84`] = `
Object {
  "annotation_level": "failure",
  "end_column": 41,
  "end_line": 5,
  "message": "Parameter x should be final.",
  "path": Any<String>,
  "start_column": 41,
  "start_line": 5,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 85`] = `
Object {
  "annotation_level": "failure",
  "end_column": 52,
  "end_line": 5,
  "message": "Parameter y should be final.",
  "path": Any<String>,
  "start_column": 52,
  "start_line": 5,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 86`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 13,
  "message": "Class 'Design' looks like designed for extension (can be subclassed), but the method 
'simplifiedTernary' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'Design' final or making the method 
'simplifiedTernary' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 13,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 87`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 13,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 13,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 88`] = `
Object {
  "annotation_level": "failure",
  "end_column": 38,
  "end_line": 13,
  "message": "Parameter condition should be final.",
  "path": Any<String>,
  "start_column": 38,
  "start_line": 13,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 89`] = `
Object {
  "annotation_level": "failure",
  "end_column": 57,
  "end_line": 13,
  "message": "Parameter something should be final.",
  "path": Any<String>,
  "start_column": 57,
  "start_line": 13,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 90`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 17,
  "message": "Class 'Design' looks like designed for extension (can be subclassed), but the method 'toString' does 
not have javadoc that explains how to do that safely. If class is not designed for extension 
consider making the class 'Design' final or making the method 'toString' 
static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 17,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 91`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 17,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 17,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 92`] = `
Object {
  "annotation_level": "failure",
  "end_column": 1,
  "end_line": 3,
  "message": "Redundant import from the java.lang package - java.lang.String.",
  "path": Any<String>,
  "start_column": 1,
  "start_line": 3,
  "title": "RedundantImportCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 93`] = `
Object {
  "annotation_level": "failure",
  "end_column": 8,
  "end_line": 3,
  "message": "Unused import - java.lang.String.",
  "path": Any<String>,
  "start_column": 8,
  "start_line": 3,
  "title": "UnusedImportsCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 94`] = `
Object {
  "annotation_level": "failure",
  "end_column": 1,
  "end_line": 4,
  "message": "Duplicate import to line 3 - java.lang.String.",
  "path": Any<String>,
  "start_column": 1,
  "start_line": 4,
  "title": "RedundantImportCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 95`] = `
Object {
  "annotation_level": "failure",
  "end_column": 1,
  "end_line": 4,
  "message": "Redundant import from the java.lang package - java.lang.String.",
  "path": Any<String>,
  "start_column": 1,
  "start_line": 4,
  "title": "RedundantImportCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 96`] = `
Object {
  "annotation_level": "failure",
  "end_column": 8,
  "end_line": 4,
  "message": "Unused import - java.lang.String.",
  "path": Any<String>,
  "start_column": 8,
  "start_line": 4,
  "title": "UnusedImportsCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 97`] = `
Object {
  "annotation_level": "failure",
  "end_column": 15,
  "end_line": 6,
  "message": "Unused import - java.time.format.DateTimeFormatter.BASIC_ISO_DATE.",
  "path": Any<String>,
  "start_column": 15,
  "start_line": 6,
  "title": "UnusedImportsCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 98`] = `
Object {
  "annotation_level": "failure",
  "end_column": 15,
  "end_line": 7,
  "message": "Unused import - java.time.format.DateTimeFormatter.ISO_DATE.",
  "path": Any<String>,
  "start_column": 15,
  "start_line": 7,
  "title": "UnusedImportsCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 99`] = `
Object {
  "annotation_level": "failure",
  "end_column": 15,
  "end_line": 8,
  "message": "Unused import - java.time.format.DateTimeFormatter.ISO_DATE_TIME.",
  "path": Any<String>,
  "start_column": 15,
  "start_line": 8,
  "title": "UnusedImportsCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 100`] = `
Object {
  "annotation_level": "failure",
  "end_column": 15,
  "end_line": 9,
  "message": "Unused import - java.time.format.DateTimeFormatter.ISO_LOCAL_TIME.",
  "path": Any<String>,
  "start_column": 15,
  "start_line": 9,
  "title": "UnusedImportsCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 101`] = `
Object {
  "annotation_level": "failure",
  "end_column": 15,
  "end_line": 10,
  "message": "Unused import - java.time.format.DateTimeFormatter.ISO_INSTANT.",
  "path": Any<String>,
  "start_column": 15,
  "start_line": 10,
  "title": "UnusedImportsCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 102`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 14,
  "message": "Class 'CodeStyle' looks like designed for extension (can be subclassed), but the method 
'forLoopShouldBeWhileLoop' does not have javadoc that explains how to do that safely. If class is 
not designed for extension consider making the class 'CodeStyle' final or making the method 
'forLoopShouldBeWhileLoop' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 14,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 103`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 14,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 14,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 104`] = `
Object {
  "annotation_level": "failure",
  "end_column": 9,
  "end_line": 15,
  "message": "'for' is not followed by whitespace.",
  "path": Any<String>,
  "start_column": 9,
  "start_line": 15,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 105`] = `
Object {
  "annotation_level": "failure",
  "end_column": 21,
  "end_line": 15,
  "message": "';' is followed by whitespace.",
  "path": Any<String>,
  "start_column": 21,
  "start_line": 15,
  "title": "EmptyForIteratorPadCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 106`] = `
Object {
  "annotation_level": "failure",
  "end_column": 23,
  "end_line": 15,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 23,
  "start_line": 15,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 107`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 20,
  "message": "Class 'CodeStyle' looks like designed for extension (can be subclassed), but the method 
'unnecessaryFullyQualifiedName' does not have javadoc that explains how to do that safely. If class 
is not designed for extension consider making the class 'CodeStyle' final or making the method 
'unnecessaryFullyQualifiedName' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 20,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 108`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 20,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 20,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 109`] = `
Object {
  "annotation_level": "failure",
  "end_column": 12,
  "end_line": 24,
  "message": "Redundant 'static' modifier.",
  "path": Any<String>,
  "start_column": 12,
  "start_line": 24,
  "title": "RedundantModifierCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 110`] = `
Object {
  "annotation_level": "failure",
  "end_column": 12,
  "end_line": 28,
  "message": "Redundant 'static' modifier.",
  "path": Any<String>,
  "start_column": 12,
  "start_line": 28,
  "title": "RedundantModifierCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 111`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 32,
  "message": "Class 'CodeStyle' looks like designed for extension (can be subclassed), but the method 
'unnecessaryReturn' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'CodeStyle' final or making the method 
'unnecessaryReturn' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 32,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 112`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 32,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 32,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 113`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 36,
  "message": "Class 'CodeStyle' looks like designed for extension (can be subclassed), but the method 
'uselessParentheses' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'CodeStyle' final or making the method 
'uselessParentheses' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 36,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 114`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 36,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 36,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 115`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 40,
  "message": "Class 'CodeStyle' looks like designed for extension (can be subclassed), but the method 
'uselessQualifiedThis' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'CodeStyle' final or making the method 
'uselessQualifiedThis' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 40,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 116`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 40,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 40,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 117`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 47,
  "message": "Redundant 'public' modifier.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 47,
  "title": "RedundantModifierCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 118`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 48,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 48,
  "title": "JavadocVariableCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 119`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 48,
  "message": "Redundant 'public' modifier.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 48,
  "title": "RedundantModifierCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 120`] = `
Object {
  "annotation_level": "failure",
  "end_column": 29,
  "end_line": 48,
  "message": "Name 'publicStaticFinal' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.",
  "path": Any<String>,
  "start_column": 29,
  "start_line": 48,
  "title": "ConstantNameCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 121`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 49,
  "message": "Redundant 'public' modifier.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 49,
  "title": "RedundantModifierCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 122`] = `
Object {
  "annotation_level": "failure",
  "end_column": 43,
  "end_line": 49,
  "message": "'{' is not followed by whitespace.",
  "path": Any<String>,
  "start_column": 43,
  "start_line": 49,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 123`] = `
Object {
  "annotation_level": "failure",
  "end_column": 44,
  "end_line": 49,
  "message": "'}' is not preceded with whitespace.",
  "path": Any<String>,
  "start_column": 44,
  "start_line": 49,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 124`] = `
Object {
  "annotation_level": "failure",
  "end_column": 12,
  "end_line": 50,
  "message": "Redundant 'static' modifier.",
  "path": Any<String>,
  "start_column": 12,
  "start_line": 50,
  "title": "RedundantModifierCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 125`] = `
Object {
  "annotation_level": "failure",
  "end_column": 51,
  "end_line": 50,
  "message": "'{' is not followed by whitespace.",
  "path": Any<String>,
  "start_column": 51,
  "start_line": 50,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 126`] = `
Object {
  "annotation_level": "failure",
  "end_column": 52,
  "end_line": 50,
  "message": "'}' is not preceded with whitespace.",
  "path": Any<String>,
  "start_column": 52,
  "start_line": 50,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 127`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 55,
  "message": "Redundant 'public' modifier.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 55,
  "title": "RedundantModifierCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 128`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 56,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 56,
  "title": "JavadocVariableCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 129`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 56,
  "message": "Redundant 'public' modifier.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 56,
  "title": "RedundantModifierCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 130`] = `
Object {
  "annotation_level": "failure",
  "end_column": 29,
  "end_line": 56,
  "message": "Name 'publicStaticFinal' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.",
  "path": Any<String>,
  "start_column": 29,
  "start_line": 56,
  "title": "ConstantNameCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 131`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 57,
  "message": "Redundant 'public' modifier.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 57,
  "title": "RedundantModifierCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 132`] = `
Object {
  "annotation_level": "failure",
  "end_column": 43,
  "end_line": 57,
  "message": "'{' is not followed by whitespace.",
  "path": Any<String>,
  "start_column": 43,
  "start_line": 57,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 133`] = `
Object {
  "annotation_level": "failure",
  "end_column": 44,
  "end_line": 57,
  "message": "'}' is not preceded with whitespace.",
  "path": Any<String>,
  "start_column": 44,
  "start_line": 57,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 134`] = `
Object {
  "annotation_level": "failure",
  "end_column": 12,
  "end_line": 58,
  "message": "Redundant 'static' modifier.",
  "path": Any<String>,
  "start_column": 12,
  "start_line": 58,
  "title": "RedundantModifierCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 135`] = `
Object {
  "annotation_level": "failure",
  "end_column": 51,
  "end_line": 58,
  "message": "'{' is not followed by whitespace.",
  "path": Any<String>,
  "start_column": 51,
  "start_line": 58,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 136`] = `
Object {
  "annotation_level": "failure",
  "end_column": 52,
  "end_line": 58,
  "message": "'}' is not preceded with whitespace.",
  "path": Any<String>,
  "start_column": 52,
  "start_line": 58,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 137`] = `
Object {
  "annotation_level": "failure",
  "end_column": 1,
  "end_line": 9,
  "message": "Redundant import from the same package - org.example.pmd.BestPractices.",
  "path": Any<String>,
  "start_column": 1,
  "start_line": 9,
  "title": "RedundantImportCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 138`] = `
Object {
  "annotation_level": "failure",
  "end_column": 8,
  "end_line": 9,
  "message": "Unused import - org.example.pmd.BestPractices.",
  "path": Any<String>,
  "start_column": 8,
  "start_line": 9,
  "title": "UnusedImportsCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 139`] = `
Object {
  "annotation_level": "failure",
  "end_column": 12,
  "end_line": 13,
  "message": "'{' is not followed by whitespace.",
  "path": Any<String>,
  "start_column": 12,
  "start_line": 13,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 140`] = `
Object {
  "annotation_level": "failure",
  "end_column": 12,
  "end_line": 13,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 12,
  "start_line": 13,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 141`] = `
Object {
  "annotation_level": "failure",
  "end_column": 13,
  "end_line": 13,
  "message": "'}' is not preceded with whitespace.",
  "path": Any<String>,
  "start_column": 13,
  "start_line": 13,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 142`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 15,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'avoidBranchingStatementAsLastInLoop' does not have javadoc that explains how to do that safely. If 
class is not designed for extension consider making the class 'ErrorProne' final or making the 
method 'avoidBranchingStatementAsLastInLoop' static/final/abstract/empty, or adding allowed 
annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 15,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 143`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 15,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 15,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 144`] = `
Object {
  "annotation_level": "failure",
  "end_column": 29,
  "end_line": 16,
  "message": "'10' is a magic number.",
  "path": Any<String>,
  "start_column": 29,
  "start_line": 16,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 145`] = `
Object {
  "annotation_level": "failure",
  "end_column": 26,
  "end_line": 17,
  "message": "'25' is a magic number.",
  "path": Any<String>,
  "start_column": 26,
  "start_line": 17,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 146`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 24,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'avoidDecimalLiteralsInBigDecimalConstructor' does not have javadoc that explains how to do that 
safely. If class is not designed for extension consider making the class 'ErrorProne' final or 
making the method 'avoidDecimalLiteralsInBigDecimalConstructor' static/final/abstract/empty, or 
adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 24,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 147`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 24,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 24,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 148`] = `
Object {
  "annotation_level": "failure",
  "end_column": 31,
  "end_line": 25,
  "message": "'1.123' is a magic number.",
  "path": Any<String>,
  "start_column": 31,
  "start_line": 25,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 149`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 28,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'avoidMultipleUnaryOperators' does not have javadoc that explains how to do that safely. If class is 
not designed for extension consider making the class 'ErrorProne' final or making the method 
'avoidMultipleUnaryOperators' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 28,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 150`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 28,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 28,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 151`] = `
Object {
  "annotation_level": "failure",
  "end_column": 17,
  "end_line": 29,
  "message": "Expression can be simplified.",
  "path": Any<String>,
  "start_column": 17,
  "start_line": 29,
  "title": "SimplifyBooleanExpressionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 152`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 32,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'avoidUsingOctalValues' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'avoidUsingOctalValues' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 32,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 153`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 32,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 32,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 154`] = `
Object {
  "annotation_level": "failure",
  "end_column": 16,
  "end_line": 33,
  "message": "'010' is a magic number.",
  "path": Any<String>,
  "start_column": 16,
  "start_line": 33,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 155`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 36,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'brokenNullCheck' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'brokenNullCheck' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 36,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 156`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 36,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 36,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 157`] = `
Object {
  "annotation_level": "failure",
  "end_column": 35,
  "end_line": 36,
  "message": "Parameter string should be final.",
  "path": Any<String>,
  "start_column": 35,
  "start_line": 36,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 158`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 43,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'checkSkipResult' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'checkSkipResult' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 43,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 159`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 43,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 43,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 160`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 48,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'classCastExceptionWithToArray' does not have javadoc that explains how to do that safely. If class 
is not designed for extension consider making the class 'ErrorProne' final or making the method 
'classCastExceptionWithToArray' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 48,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 161`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 48,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 48,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 162`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 54,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'dontUseFloatTypeForLoopIndices' does not have javadoc that explains how to do that safely. If class 
is not designed for extension consider making the class 'ErrorProne' final or making the method 
'dontUseFloatTypeForLoopIndices' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 54,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 163`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 54,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 54,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 164`] = `
Object {
  "annotation_level": "failure",
  "end_column": 31,
  "end_line": 55,
  "message": "'10' is a magic number.",
  "path": Any<String>,
  "start_column": 31,
  "start_line": 55,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 165`] = `
Object {
  "annotation_level": "failure",
  "end_column": 40,
  "end_line": 55,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 40,
  "start_line": 55,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 166`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 60,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptyTryCatchFinallyBlocks' does not have javadoc that explains how to do that safely. If class is 
not designed for extension consider making the class 'ErrorProne' final or making the method 
'emptyTryCatchFinallyBlocks' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 60,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 167`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 60,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 60,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 168`] = `
Object {
  "annotation_level": "failure",
  "end_column": 13,
  "end_line": 61,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 13,
  "start_line": 61,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 169`] = `
Object {
  "annotation_level": "failure",
  "end_column": 19,
  "end_line": 65,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 19,
  "start_line": 65,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 170`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 70,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptyIfBlock' does not have javadoc that explains how to do that safely. If class is not designed 
for extension consider making the class 'ErrorProne' final or making the method 'emptyIfBlock' 
static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 70,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 171`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 70,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 70,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 172`] = `
Object {
  "annotation_level": "failure",
  "end_column": 30,
  "end_line": 70,
  "message": "Parameter condition should be final.",
  "path": Any<String>,
  "start_column": 30,
  "start_line": 70,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 173`] = `
Object {
  "annotation_level": "failure",
  "end_column": 24,
  "end_line": 71,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 24,
  "start_line": 71,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 174`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 76,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptyStatementBlock' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'emptyStatementBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 76,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 175`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 76,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 76,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 176`] = `
Object {
  "annotation_level": "failure",
  "end_column": 9,
  "end_line": 77,
  "message": "'{' is not followed by whitespace.",
  "path": Any<String>,
  "start_column": 9,
  "start_line": 77,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 177`] = `
Object {
  "annotation_level": "failure",
  "end_column": 9,
  "end_line": 77,
  "message": "Avoid nested blocks.",
  "path": Any<String>,
  "start_column": 9,
  "start_line": 77,
  "title": "AvoidNestedBlocksCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 178`] = `
Object {
  "annotation_level": "failure",
  "end_column": 10,
  "end_line": 77,
  "message": "'}' is not preceded with whitespace.",
  "path": Any<String>,
  "start_column": 10,
  "start_line": 77,
  "title": "WhitespaceAroundCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 179`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 80,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptyStatementNotInLoop' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'emptyStatementNotInLoop' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 80,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 180`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 80,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 80,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 181`] = `
Object {
  "annotation_level": "failure",
  "end_column": 9,
  "end_line": 81,
  "message": "Empty statement.",
  "path": Any<String>,
  "start_column": 9,
  "start_line": 81,
  "title": "EmptyStatementCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 182`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 84,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptySwitchStatements' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'emptySwitchStatements' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 84,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 183`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 84,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 84,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 184`] = `
Object {
  "annotation_level": "failure",
  "end_column": 0,
  "end_line": 86,
  "message": "switch without \\"default\\" clause.",
  "path": Any<String>,
  "start_column": 0,
  "start_line": 86,
  "title": "MissingSwitchDefaultCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 185`] = `
Object {
  "annotation_level": "failure",
  "end_column": 20,
  "end_line": 86,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 20,
  "start_line": 86,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 186`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 91,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptySynchronizedBlock' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'emptySynchronizedBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 91,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 187`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 91,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 91,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 188`] = `
Object {
  "annotation_level": "failure",
  "end_column": 29,
  "end_line": 92,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 29,
  "start_line": 92,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 189`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 97,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'emptyWhileStmt' does not have javadoc that explains how to do that safely. If class is not designed 
for extension consider making the class 'ErrorProne' final or making the method 'emptyWhileStmt' 
static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 97,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 190`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 97,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 97,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 191`] = `
Object {
  "annotation_level": "failure",
  "end_column": 22,
  "end_line": 98,
  "message": "Must have at least one statement.",
  "path": Any<String>,
  "start_column": 22,
  "start_line": 98,
  "title": "EmptyBlockCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 192`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 103,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'jumbledIncrementer' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'jumbledIncrementer' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 103,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 193`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 103,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 103,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 194`] = `
Object {
  "annotation_level": "failure",
  "end_column": 29,
  "end_line": 104,
  "message": "'10' is a magic number.",
  "path": Any<String>,
  "start_column": 29,
  "start_line": 104,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 195`] = `
Object {
  "annotation_level": "failure",
  "end_column": 33,
  "end_line": 105,
  "message": "'20' is a magic number.",
  "path": Any<String>,
  "start_column": 33,
  "start_line": 105,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 196`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 111,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'misplacedNullCheck' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'misplacedNullCheck' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 111,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 197`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 111,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 111,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 198`] = `
Object {
  "annotation_level": "failure",
  "end_column": 39,
  "end_line": 111,
  "message": "Parameter string should be final.",
  "path": Any<String>,
  "start_column": 39,
  "start_line": 111,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 199`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 115,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'equals' 
does not have javadoc that explains how to do that safely. If class is not designed for extension 
consider making the class 'ErrorProne' final or making the method 'equals' 
static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 115,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 200`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 115,
  "message": "Definition of 'equals()' without corresponding definition of 'hashCode()'.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 115,
  "title": "EqualsHashCodeCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 201`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 115,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 115,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 202`] = `
Object {
  "annotation_level": "failure",
  "end_column": 27,
  "end_line": 115,
  "message": "Parameter other should be final.",
  "path": Any<String>,
  "start_column": 27,
  "start_line": 115,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 203`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 119,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'returnFromFinallyBlock' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'returnFromFinallyBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 119,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 204`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 119,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 119,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 205`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 127,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'unconditionalIfStatement' does not have javadoc that explains how to do that safely. If class is 
not designed for extension consider making the class 'ErrorProne' final or making the method 
'unconditionalIfStatement' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 127,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 206`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 127,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 127,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 207`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 134,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'unnecessaryConversionTemporary' does not have javadoc that explains how to do that safely. If class 
is not designed for extension consider making the class 'ErrorProne' final or making the method 
'unnecessaryConversionTemporary' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 134,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 208`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 134,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 134,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 209`] = `
Object {
  "annotation_level": "failure",
  "end_column": 50,
  "end_line": 134,
  "message": "Parameter x should be final.",
  "path": Any<String>,
  "start_column": 50,
  "start_line": 134,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 210`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 138,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'unusedNullCheckInEquals' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'ErrorProne' final or making the method 
'unusedNullCheckInEquals' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 138,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 211`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 138,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 138,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 212`] = `
Object {
  "annotation_level": "failure",
  "end_column": 44,
  "end_line": 138,
  "message": "Parameter a should be final.",
  "path": Any<String>,
  "start_column": 44,
  "start_line": 138,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 213`] = `
Object {
  "annotation_level": "failure",
  "end_column": 54,
  "end_line": 138,
  "message": "Parameter b should be final.",
  "path": Any<String>,
  "start_column": 54,
  "start_line": 138,
  "title": "FinalParametersCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 214`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 142,
  "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 
'uselessOperationOnImmutable' does not have javadoc that explains how to do that safely. If class is 
not designed for extension consider making the class 'ErrorProne' final or making the method 
'uselessOperationOnImmutable' static/final/abstract/empty, or adding allowed annotation for the 
method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 142,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 215`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 142,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 142,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 216`] = `
Object {
  "annotation_level": "failure",
  "end_column": 40,
  "end_line": 143,
  "message": "'5' is a magic number.",
  "path": Any<String>,
  "start_column": 40,
  "start_line": 143,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 217`] = `
Object {
  "annotation_level": "failure",
  "end_column": 31,
  "end_line": 144,
  "message": "'6' is a magic number.",
  "path": Any<String>,
  "start_column": 31,
  "start_line": 144,
  "title": "MagicNumberCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 218`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 5,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 5,
  "title": "JavadocVariableCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 219`] = `
Object {
  "annotation_level": "failure",
  "end_column": 12,
  "end_line": 5,
  "message": "Variable 'object' must be private and have accessor methods.",
  "path": Any<String>,
  "start_column": 12,
  "start_line": 5,
  "title": "VisibilityModifierCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 220`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 7,
  "message": "Class 'Multithreading' looks like designed for extension (can be subclassed), but the method 
'avoidThreadGroup' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'Multithreading' final or making the method 
'avoidThreadGroup' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 7,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 221`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 7,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 7,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 222`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 11,
  "message": "Class 'Multithreading' looks like designed for extension (can be subclassed), but the method 
'dontCallThreadRun' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'Multithreading' final or making the method 
'dontCallThreadRun' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 11,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 223`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 11,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 11,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 224`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 15,
  "message": "Class 'Multithreading' looks like designed for extension (can be subclassed), but the method 
'doubleCheckedLocking' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'Multithreading' final or making the method 
'doubleCheckedLocking' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 15,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 225`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 15,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 15,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 226`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 7,
  "message": "Class 'Performance' looks like designed for extension (can be subclassed), but the method 
'bigIntegerInstantiation' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'Performance' final or making the method 
'bigIntegerInstantiation' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 7,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 227`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 7,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 7,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 228`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 11,
  "message": "Class 'Performance' looks like designed for extension (can be subclassed), but the method 
'booleanInstantiation' does not have javadoc that explains how to do that safely. If class is not 
designed for extension consider making the class 'Performance' final or making the method 
'booleanInstantiation' static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 11,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 229`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 11,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 11,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 230`] = `
Object {
  "annotation_level": "failure",
  "end_column": 8,
  "end_line": 3,
  "message": "Unused import - java.io.File.",
  "path": Any<String>,
  "start_column": 8,
  "start_line": 3,
  "title": "UnusedImportsCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 231`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 11,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 11,
  "title": "JavadocVariableCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 232`] = `
Object {
  "annotation_level": "failure",
  "end_column": 19,
  "end_line": 11,
  "message": "Variable 'ipAddress' must be private and have accessor methods.",
  "path": Any<String>,
  "start_column": 19,
  "start_line": 11,
  "title": "VisibilityModifierCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 233`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 12,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 12,
  "title": "JavadocVariableCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 234`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 14,
  "message": "Class 'BestPractices' looks like designed for extension (can be subclassed), but the method 
'checkResultSet' does not have javadoc that explains how to do that safely. If class is not designed 
for extension consider making the class 'BestPractices' final or making the method 'checkResultSet' 
static/final/abstract/empty, or adding allowed annotation for the method.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 14,
  "title": "DesignForExtensionCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 235`] = `
Object {
  "annotation_level": "failure",
  "end_column": 5,
  "end_line": 14,
  "message": "Missing a Javadoc comment.",
  "path": Any<String>,
  "start_column": 5,
  "start_line": 14,
  "title": "MissingJavadocMethodCheck",
}
`;

exports[`Checkstyle annotator can annotate a Checkstyle report 236`] = `
Object {
  "annotation_level": "failure",
  "end_column": 38,
  "end_line": 21,
  "message": "Parameter unusedFormalParameter should be final.",
  "path": Any<String>,
  "start_column": 38,
  "start_line": 21,
  "title": "FinalParametersCheck",
}
`;
