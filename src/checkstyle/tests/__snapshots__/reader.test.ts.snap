// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Checkstyle report reader can read a Checkstyle report 1`] = `
Object {
  "violations": Array [
    Object {
      "column": 0,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 1,
      "message": "Missing package-info.java file.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck",
      "severity": "error",
    },
    Object {
      "column": 12,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 11,
      "message": "'{' is not followed by whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 12,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 11,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 13,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 11,
      "message": "'}' is not preceded with whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 13,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'misplacedNullCheck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'misplacedNullCheck' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 13,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 39,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 13,
      "message": "Parameter string should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 17,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 17,
      "message": "Definition of 'equals()' without corresponding definition of 'hashCode()'.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 17,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 27,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 17,
      "message": "Parameter other should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 21,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'returnFromFinallyBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'returnFromFinallyBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 21,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 29,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'unconditionalIfStatement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'unconditionalIfStatement' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 29,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 36,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'unnecessaryConversionTemporary' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'unnecessaryConversionTemporary' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 36,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 50,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 36,
      "message": "Parameter x should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 40,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'unusedNullCheckInEquals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'unusedNullCheckInEquals' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 40,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 44,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 40,
      "message": "Parameter a should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 54,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 40,
      "message": "Parameter b should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 44,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'uselessOperationOnImmutable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'uselessOperationOnImmutable' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 44,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 40,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 45,
      "message": "'5' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 31,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 46,
      "message": "'6' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 49,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'dontUseFloatTypeForLoopIndices' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'dontUseFloatTypeForLoopIndices' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 49,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 31,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 50,
      "message": "'10' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 40,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 50,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 55,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptyTryCatchFinallyBlocks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptyTryCatchFinallyBlocks' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 55,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 13,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 56,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 19,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 60,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 65,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptyIfBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptyIfBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 65,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 30,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 65,
      "message": "Parameter condition should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 24,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 66,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 71,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptyStatementBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptyStatementBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 71,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 9,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 72,
      "message": "'{' is not followed by whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 9,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 72,
      "message": "Avoid nested blocks.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck",
      "severity": "error",
    },
    Object {
      "column": 10,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 72,
      "message": "'}' is not preceded with whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 75,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptyStatementNotInLoop' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptyStatementNotInLoop' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 75,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 9,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 76,
      "message": "Empty statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 79,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptySwitchStatements' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptySwitchStatements' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 79,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 0,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 81,
      "message": "switch without \\"default\\" clause.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck",
      "severity": "error",
    },
    Object {
      "column": 20,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 81,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 86,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptySynchronizedBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptySynchronizedBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 86,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 29,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 87,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 92,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptyWhileStmt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptyWhileStmt' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 92,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 22,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 93,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 98,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'jumbledIncrementer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'jumbledIncrementer' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 98,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 29,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 99,
      "message": "'10' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 33,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 100,
      "message": "'20' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 106,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'avoidBranchingStatementAsLastInLoop' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'avoidBranchingStatementAsLastInLoop' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 106,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 29,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 107,
      "message": "'10' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 26,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 108,
      "message": "'25' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 115,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'avoidDecimalLiteralsInBigDecimalConstructor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'avoidDecimalLiteralsInBigDecimalConstructor' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 115,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 31,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 116,
      "message": "'1.123' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 119,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'avoidMultipleUnaryOperators' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'avoidMultipleUnaryOperators' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 119,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 17,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 120,
      "message": "Expression can be simplified.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 123,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'avoidUsingOctalValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'avoidUsingOctalValues' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 123,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 16,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 124,
      "message": "'010' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 127,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'brokenNullCheck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'brokenNullCheck' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 127,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 35,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 127,
      "message": "Parameter string should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 134,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'checkSkipResult' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'checkSkipResult' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 134,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 139,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'classCastExceptionWithToArray' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'classCastExceptionWithToArray' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/cpd/ErrorProne.java",
      "line": 139,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 0,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Design.java",
      "line": 1,
      "message": "Missing package-info.java file.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Design.java",
      "line": 5,
      "message": "Class 'Design' looks like designed for extension (can be subclassed), but the method 'collapsibleIfStatements' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Design' final or making the method 'collapsibleIfStatements' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Design.java",
      "line": 5,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 41,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Design.java",
      "line": 5,
      "message": "Parameter x should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 52,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Design.java",
      "line": 5,
      "message": "Parameter y should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Design.java",
      "line": 13,
      "message": "Class 'Design' looks like designed for extension (can be subclassed), but the method 'simplifiedTernary' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Design' final or making the method 'simplifiedTernary' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Design.java",
      "line": 13,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 38,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Design.java",
      "line": 13,
      "message": "Parameter condition should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 57,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Design.java",
      "line": 13,
      "message": "Parameter something should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Design.java",
      "line": 17,
      "message": "Class 'Design' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Design' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Design.java",
      "line": 17,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 1,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 3,
      "message": "Redundant import from the java.lang package - java.lang.String.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck",
      "severity": "error",
    },
    Object {
      "column": 8,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 3,
      "message": "Unused import - java.lang.String.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
      "severity": "error",
    },
    Object {
      "column": 1,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 4,
      "message": "Duplicate import to line 3 - java.lang.String.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck",
      "severity": "error",
    },
    Object {
      "column": 1,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 4,
      "message": "Redundant import from the java.lang package - java.lang.String.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck",
      "severity": "error",
    },
    Object {
      "column": 8,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 4,
      "message": "Unused import - java.lang.String.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
      "severity": "error",
    },
    Object {
      "column": 15,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 6,
      "message": "Unused import - java.time.format.DateTimeFormatter.BASIC_ISO_DATE.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
      "severity": "error",
    },
    Object {
      "column": 15,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 7,
      "message": "Unused import - java.time.format.DateTimeFormatter.ISO_DATE.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
      "severity": "error",
    },
    Object {
      "column": 15,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 8,
      "message": "Unused import - java.time.format.DateTimeFormatter.ISO_DATE_TIME.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
      "severity": "error",
    },
    Object {
      "column": 15,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 9,
      "message": "Unused import - java.time.format.DateTimeFormatter.ISO_LOCAL_TIME.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
      "severity": "error",
    },
    Object {
      "column": 15,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 10,
      "message": "Unused import - java.time.format.DateTimeFormatter.ISO_INSTANT.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 14,
      "message": "Class 'CodeStyle' looks like designed for extension (can be subclassed), but the method 'forLoopShouldBeWhileLoop' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CodeStyle' final or making the method 'forLoopShouldBeWhileLoop' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 14,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 9,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 15,
      "message": "'for' is not followed by whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 21,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 15,
      "message": "';' is followed by whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck",
      "severity": "error",
    },
    Object {
      "column": 23,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 15,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 20,
      "message": "Class 'CodeStyle' looks like designed for extension (can be subclassed), but the method 'unnecessaryFullyQualifiedName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CodeStyle' final or making the method 'unnecessaryFullyQualifiedName' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 20,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 12,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 24,
      "message": "Redundant 'static' modifier.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
      "severity": "error",
    },
    Object {
      "column": 12,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 28,
      "message": "Redundant 'static' modifier.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 32,
      "message": "Class 'CodeStyle' looks like designed for extension (can be subclassed), but the method 'unnecessaryReturn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CodeStyle' final or making the method 'unnecessaryReturn' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 32,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 36,
      "message": "Class 'CodeStyle' looks like designed for extension (can be subclassed), but the method 'uselessParentheses' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CodeStyle' final or making the method 'uselessParentheses' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 36,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 40,
      "message": "Class 'CodeStyle' looks like designed for extension (can be subclassed), but the method 'uselessQualifiedThis' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CodeStyle' final or making the method 'uselessQualifiedThis' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 40,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 47,
      "message": "Redundant 'public' modifier.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 48,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 48,
      "message": "Redundant 'public' modifier.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
      "severity": "error",
    },
    Object {
      "column": 29,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 48,
      "message": "Name 'publicStaticFinal' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 49,
      "message": "Redundant 'public' modifier.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
      "severity": "error",
    },
    Object {
      "column": 43,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 49,
      "message": "'{' is not followed by whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 44,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 49,
      "message": "'}' is not preceded with whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 12,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 50,
      "message": "Redundant 'static' modifier.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
      "severity": "error",
    },
    Object {
      "column": 51,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 50,
      "message": "'{' is not followed by whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 52,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 50,
      "message": "'}' is not preceded with whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 55,
      "message": "Redundant 'public' modifier.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 56,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 56,
      "message": "Redundant 'public' modifier.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
      "severity": "error",
    },
    Object {
      "column": 29,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 56,
      "message": "Name 'publicStaticFinal' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 57,
      "message": "Redundant 'public' modifier.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
      "severity": "error",
    },
    Object {
      "column": 43,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 57,
      "message": "'{' is not followed by whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 44,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 57,
      "message": "'}' is not preceded with whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 12,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 58,
      "message": "Redundant 'static' modifier.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck",
      "severity": "error",
    },
    Object {
      "column": 51,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 58,
      "message": "'{' is not followed by whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 52,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/CodeStyle.java",
      "line": 58,
      "message": "'}' is not preceded with whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 1,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 9,
      "message": "Redundant import from the same package - org.example.pmd.BestPractices.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck",
      "severity": "error",
    },
    Object {
      "column": 8,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 9,
      "message": "Unused import - org.example.pmd.BestPractices.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
      "severity": "error",
    },
    Object {
      "column": 12,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 13,
      "message": "'{' is not followed by whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 12,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 13,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 13,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 13,
      "message": "'}' is not preceded with whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 15,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'avoidBranchingStatementAsLastInLoop' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'avoidBranchingStatementAsLastInLoop' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 15,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 29,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 16,
      "message": "'10' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 26,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 17,
      "message": "'25' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 24,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'avoidDecimalLiteralsInBigDecimalConstructor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'avoidDecimalLiteralsInBigDecimalConstructor' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 24,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 31,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 25,
      "message": "'1.123' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 28,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'avoidMultipleUnaryOperators' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'avoidMultipleUnaryOperators' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 28,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 17,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 29,
      "message": "Expression can be simplified.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.SimplifyBooleanExpressionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 32,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'avoidUsingOctalValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'avoidUsingOctalValues' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 32,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 16,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 33,
      "message": "'010' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 36,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'brokenNullCheck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'brokenNullCheck' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 36,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 35,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 36,
      "message": "Parameter string should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 43,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'checkSkipResult' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'checkSkipResult' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 43,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 48,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'classCastExceptionWithToArray' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'classCastExceptionWithToArray' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 48,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 54,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'dontUseFloatTypeForLoopIndices' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'dontUseFloatTypeForLoopIndices' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 54,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 31,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 55,
      "message": "'10' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 40,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 55,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 60,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptyTryCatchFinallyBlocks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptyTryCatchFinallyBlocks' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 60,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 13,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 61,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 19,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 65,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 70,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptyIfBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptyIfBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 70,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 30,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 70,
      "message": "Parameter condition should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 24,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 71,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 76,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptyStatementBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptyStatementBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 76,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 9,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 77,
      "message": "'{' is not followed by whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 9,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 77,
      "message": "Avoid nested blocks.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck",
      "severity": "error",
    },
    Object {
      "column": 10,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 77,
      "message": "'}' is not preceded with whitespace.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 80,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptyStatementNotInLoop' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptyStatementNotInLoop' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 80,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 9,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 81,
      "message": "Empty statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 84,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptySwitchStatements' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptySwitchStatements' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 84,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 0,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 86,
      "message": "switch without \\"default\\" clause.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck",
      "severity": "error",
    },
    Object {
      "column": 20,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 86,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 91,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptySynchronizedBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptySynchronizedBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 91,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 29,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 92,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 97,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'emptyWhileStmt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'emptyWhileStmt' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 97,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 22,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 98,
      "message": "Must have at least one statement.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 103,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'jumbledIncrementer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'jumbledIncrementer' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 103,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 29,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 104,
      "message": "'10' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 33,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 105,
      "message": "'20' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 111,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'misplacedNullCheck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'misplacedNullCheck' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 111,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 39,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 111,
      "message": "Parameter string should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 115,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 115,
      "message": "Definition of 'equals()' without corresponding definition of 'hashCode()'.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.EqualsHashCodeCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 115,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 27,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 115,
      "message": "Parameter other should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 119,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'returnFromFinallyBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'returnFromFinallyBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 119,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 127,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'unconditionalIfStatement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'unconditionalIfStatement' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 127,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 134,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'unnecessaryConversionTemporary' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'unnecessaryConversionTemporary' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 134,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 50,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 134,
      "message": "Parameter x should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 138,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'unusedNullCheckInEquals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'unusedNullCheckInEquals' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 138,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 44,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 138,
      "message": "Parameter a should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 54,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 138,
      "message": "Parameter b should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 142,
      "message": "Class 'ErrorProne' looks like designed for extension (can be subclassed), but the method 'uselessOperationOnImmutable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ErrorProne' final or making the method 'uselessOperationOnImmutable' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 142,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 40,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 143,
      "message": "'5' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 31,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/ErrorProne.java",
      "line": 144,
      "message": "'6' is a magic number.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Multithreading.java",
      "line": 5,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck",
      "severity": "error",
    },
    Object {
      "column": 12,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Multithreading.java",
      "line": 5,
      "message": "Variable 'object' must be private and have accessor methods.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Multithreading.java",
      "line": 7,
      "message": "Class 'Multithreading' looks like designed for extension (can be subclassed), but the method 'avoidThreadGroup' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Multithreading' final or making the method 'avoidThreadGroup' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Multithreading.java",
      "line": 7,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Multithreading.java",
      "line": 11,
      "message": "Class 'Multithreading' looks like designed for extension (can be subclassed), but the method 'dontCallThreadRun' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Multithreading' final or making the method 'dontCallThreadRun' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Multithreading.java",
      "line": 11,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Multithreading.java",
      "line": 15,
      "message": "Class 'Multithreading' looks like designed for extension (can be subclassed), but the method 'doubleCheckedLocking' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Multithreading' final or making the method 'doubleCheckedLocking' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Multithreading.java",
      "line": 15,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Performance.java",
      "line": 7,
      "message": "Class 'Performance' looks like designed for extension (can be subclassed), but the method 'bigIntegerInstantiation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Performance' final or making the method 'bigIntegerInstantiation' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Performance.java",
      "line": 7,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Performance.java",
      "line": 11,
      "message": "Class 'Performance' looks like designed for extension (can be subclassed), but the method 'booleanInstantiation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Performance' final or making the method 'booleanInstantiation' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/Performance.java",
      "line": 11,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 8,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/BestPractices.java",
      "line": 3,
      "message": "Unused import - java.io.File.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/BestPractices.java",
      "line": 11,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck",
      "severity": "error",
    },
    Object {
      "column": 19,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/BestPractices.java",
      "line": 11,
      "message": "Variable 'ipAddress' must be private and have accessor methods.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/BestPractices.java",
      "line": 12,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/BestPractices.java",
      "line": 14,
      "message": "Class 'BestPractices' looks like designed for extension (can be subclassed), but the method 'checkResultSet' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BestPractices' final or making the method 'checkResultSet' static/final/abstract/empty, or adding allowed annotation for the method.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck",
      "severity": "error",
    },
    Object {
      "column": 5,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/BestPractices.java",
      "line": 14,
      "message": "Missing a Javadoc comment.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.javadoc.MissingJavadocMethodCheck",
      "severity": "error",
    },
    Object {
      "column": 38,
      "filePath": "/Users/mike/Projects/java-reporter-action/example/src/main/java/org/example/pmd/BestPractices.java",
      "line": 21,
      "message": "Parameter unusedFormalParameter should be final.",
      "rule": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck",
      "severity": "error",
    },
  ],
}
`;
